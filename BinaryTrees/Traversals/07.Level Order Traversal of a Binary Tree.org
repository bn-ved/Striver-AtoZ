#+title: 07. Level Order Traversal Of A Binary Tree
#+author: Bedaprakash Nayak
#+date: <2024-01-01 Mon>
*Problem Statement*: Level order traversal of a binary tree. Given the root node of the tree and you have to print the value of the level of the node by level.

** Iterative
*** Intuition
As there is a first-in first-out (FIFO) operation, we will use the queue data structure.

*** Approach
The algorithm steps are stated as:

- Take a queue data structure and push the root node to the queue.
- Set a while loop which will run till our queue is non-empty.
- In every iteration, pop out from the front of the queue and assign it to a variable (say temp).
- If temp has a left child, push it to the queue.
- If temp has a right child, push it to the queue.
- At last push the value of the temp node to our “ans” data structure.

*** Solution

#+begin_src C++
class Solution {
public:
  vector<vector<int>> levelOrder(TreeNode *root) {
    vector<vector<int>> levelOrder;
    if (!root) {
      return levelOrder;
    }
    queue<TreeNode *> q;
    q.push(root);
    while (!q.empty()) {
      vector<int> level;
      int n = q.size();
      for (int i = 0; i < n; i++) {
        TreeNode *node = q.front();
        q.pop();
        level.push_back(node->val);

        if (node->left) {
          q.push(node->left);
        }
        if (node->right) {
          q.push(node->right);
        }
      }
      levelOrder.push_back(level);
    }
    return levelOrder;
  }
};
#+end_src
